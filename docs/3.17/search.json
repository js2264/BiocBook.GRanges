[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Tidy GenomicRanges (from Michael Love)",
    "section": "",
    "text": "Welcome\nPackage: BiocBook.GRangesAuthors: Michael Love [aut], Jacques Serizay [com, cre]Compiled: 2023-08-09Package version: 0.99.0R version: R version 4.3.0 (2023-04-21)BioC version: 3.17License: MIT + file LICENSE\nThis is the landing page of the BiocBook entitled Tidy GenomicRanges in R. This book compiles material put together by Michael Love.\nThese examples focus on the packages dplyr, plyranges, nullranges, excluderanges, as well as tidy transcriptomics packages such as tidybulk and tidySummarizedExperiment.\nDocker image\nA Docker image built from this repository is available here:\nüëâ ghcr.io/js2264/biocbook.granges üê≥\n\n\n\n\n\n\nGet started now üéâ\n\n\n\nYou can get access to all the packages used in this book in &lt; 1 minute, using this command in a terminal:\n\n\n\nbash\n\ndocker run -it ghcr.io/js2264/biocbook.granges:devel R\n\n\n\n\nRStudio Server\nAn RStudio Server instance can be initiated from the Docker image as follows:\n\n\n\nbash\n\ndocker run \\\n    --volume &lt;local_folder&gt;:&lt;destination_folder&gt; \\\n    -e PASSWORD=OHCA \\\n    -p 8787:8787 \\\n    ghcr.io/js2264/biocbook.granges:devel\n\n\nThe initiated RStudio Server instance will be available at https://localhost:8787.\nSession info\n\n\n\n\n\n\nClick to expand üëá\n\n\n\n\n\n\nsessioninfo::session_info(\n    installed.packages()[,\"Package\"], \n    include_base = TRUE\n)\n##  ‚îÄ Session info ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n##   setting  value\n##   version  R version 4.3.0 (2023-04-21)\n##   os       Ubuntu 22.04.2 LTS\n##   system   x86_64, linux-gnu\n##   ui       X11\n##   language (EN)\n##   collate  en_US.UTF-8\n##   ctype    en_US.UTF-8\n##   tz       Etc/UTC\n##   date     2023-08-09\n##   pandoc   2.19.2 @ /usr/local/bin/ (via rmarkdown)\n##  \n##  ‚îÄ Packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n##   ! package                           * version    date (UTC) lib source\n##     abind                               1.4-5      2016-07-21 [1] RSPM\n##     AnnotationDbi                       1.62.2     2023-07-02 [1] Bioconductor\n##     AnnotationFilter                    1.24.0     2023-04-25 [1] Bioconductor\n##     AnnotationHub                       3.8.0      2023-04-25 [1] Bioconductor\n##     askpass                             1.1        2019-01-13 [1] RSPM (R 4.3.0)\n##     available                           1.1.0      2022-07-10 [1] RSPM\n##     base                              * 4.3.0      2023-04-26 [2] local\n##     base64enc                           0.1-3      2015-07-28 [1] RSPM (R 4.3.0)\n##     BH                                  1.81.0-1   2023-01-22 [1] RSPM\n##     Biobase                             2.60.0     2023-04-25 [1] Bioconductor\n##     BiocBook                            0.99.0     2023-08-09 [1] Github (js2264/BiocBook@bc297de)\n##     BiocBook.GRanges                    0.99.0     2023-08-09 [1] local\n##     BiocFileCache                       2.8.0      2023-04-25 [1] Bioconductor\n##     BiocGenerics                        0.46.0     2023-04-25 [1] Bioconductor\n##     BiocIO                              1.10.0     2023-04-25 [1] Bioconductor\n##     BiocManager                         1.30.20    2023-02-24 [1] CRAN (R 4.3.0)\n##     BiocParallel                        1.34.2     2023-05-22 [1] Bioconductor\n##     BiocStyle                           2.28.0     2023-04-25 [1] Bioconductor\n##     BiocVersion                         3.17.1     2022-11-04 [1] Bioconductor\n##     biomaRt                             2.56.1     2023-06-09 [1] Bioconductor\n##     Biostrings                          2.68.1     2023-05-16 [1] Bioconductor\n##     bit                                 4.0.5      2022-11-15 [1] RSPM\n##     bit64                               4.0.5      2020-08-30 [1] RSPM\n##     bitops                              1.0-7      2021-04-24 [1] RSPM\n##     blob                                1.2.4      2023-03-17 [1] RSPM\n##     bookdown                            0.34       2023-05-09 [1] RSPM\n##     boot                                1.3-28.1   2022-11-22 [2] CRAN (R 4.3.0)\n##     brew                                1.0-8      2022-09-29 [1] RSPM (R 4.3.0)\n##     brio                                1.1.3      2021-11-30 [1] RSPM (R 4.3.0)\n##     bslib                               0.4.2      2022-12-16 [1] RSPM (R 4.3.0)\n##     cachem                              1.0.7      2023-02-24 [1] RSPM (R 4.3.0)\n##     callr                               3.7.3      2022-11-02 [1] RSPM (R 4.3.0)\n##     class                               7.3-21     2023-01-23 [2] CRAN (R 4.3.0)\n##     cli                                 3.6.1      2023-03-23 [1] RSPM (R 4.3.0)\n##     clipr                               0.8.0      2022-02-22 [1] RSPM (R 4.3.0)\n##     clisymbols                          1.2.0      2017-05-21 [1] RSPM\n##     cluster                             2.1.4      2022-08-22 [2] CRAN (R 4.3.0)\n##     CodeDepends                         0.6.5      2018-07-17 [1] RSPM\n##     codetools                           0.2-19     2023-02-01 [2] CRAN (R 4.3.0)\n##     commonmark                          1.9.0      2023-03-17 [1] RSPM (R 4.3.0)\n##     compiler                            4.3.0      2023-04-26 [2] local\n##     cpp11                               0.4.3      2022-10-12 [1] RSPM (R 4.3.0)\n##     crayon                              1.5.2      2022-09-29 [1] RSPM (R 4.3.0)\n##     credentials                         1.3.2      2021-11-29 [1] RSPM (R 4.3.0)\n##     crosstalk                           1.2.0      2021-11-04 [1] RSPM\n##     curl                                5.0.0      2023-01-12 [1] RSPM (R 4.3.0)\n##     data.table                          1.14.8     2023-02-17 [1] RSPM\n##     datasets                          * 4.3.0      2023-04-26 [2] local\n##     DBI                                 1.1.3      2022-06-18 [1] RSPM\n##     dbplyr                              2.3.3      2023-07-07 [1] RSPM\n##     DelayedArray                        0.26.7     2023-07-28 [1] Bioconductor\n##     desc                                1.4.2      2022-09-08 [1] RSPM (R 4.3.0)\n##     devtools                            2.4.5      2022-10-11 [1] RSPM (R 4.3.0)\n##     diffobj                             0.3.5      2021-10-05 [1] RSPM (R 4.3.0)\n##     digest                              0.6.31     2022-12-11 [1] RSPM (R 4.3.0)\n##     dir.expiry                          1.8.0      2023-04-25 [1] Bioconductor\n##     docopt                              0.7.1      2020-06-24 [1] RSPM (R 4.3.0)\n##     downlit                             0.4.2      2022-07-05 [1] RSPM (R 4.3.0)\n##     dplyr                               1.1.2      2023-04-20 [1] RSPM\n##     DT                                  0.28       2023-05-18 [1] RSPM\n##     ellipsis                            0.3.2      2021-04-29 [1] RSPM (R 4.3.0)\n##     ensembldb                           2.24.0     2023-04-25 [1] Bioconductor\n##     evaluate                            0.20       2023-01-17 [1] RSPM (R 4.3.0)\n##     fansi                               1.0.4      2023-01-22 [1] RSPM (R 4.3.0)\n##     fastmap                             1.1.1      2023-02-24 [1] RSPM (R 4.3.0)\n##     filelock                            1.0.2      2018-10-05 [1] RSPM\n##     fontawesome                         0.5.1      2023-04-18 [1] RSPM (R 4.3.0)\n##     foreign                             0.8-84     2022-12-06 [2] CRAN (R 4.3.0)\n##     formatR                             1.14       2023-01-17 [1] RSPM\n##     fs                                  1.6.2      2023-04-25 [1] RSPM (R 4.3.0)\n##     futile.logger                       1.4.3      2016-07-10 [1] RSPM\n##     futile.options                      1.0.1      2018-04-20 [1] RSPM\n##     generics                            0.1.3      2022-07-05 [1] RSPM\n##     GenomeInfoDb                        1.36.1     2023-06-21 [1] Bioconductor\n##     GenomeInfoDbData                    1.2.10     2023-08-09 [1] Bioconductor\n##     GenomicAlignments                   1.36.0     2023-04-25 [1] Bioconductor\n##     GenomicFeatures                     1.52.1     2023-06-22 [1] Bioconductor\n##     GenomicRanges                       1.52.0     2023-04-25 [1] Bioconductor\n##     gert                                1.9.2      2022-12-05 [1] RSPM (R 4.3.0)\n##     gh                                  1.4.0      2023-02-22 [1] RSPM (R 4.3.0)\n##     gitcreds                            0.1.2      2022-09-08 [1] RSPM (R 4.3.0)\n##     glue                                1.6.2      2022-02-24 [1] RSPM (R 4.3.0)\n##     graph                               1.78.0     2023-04-25 [1] Bioconductor\n##     graphics                          * 4.3.0      2023-04-26 [2] local\n##     grDevices                         * 4.3.0      2023-04-26 [2] local\n##     grid                                4.3.0      2023-04-26 [2] local\n##     highr                               0.10       2022-12-22 [1] RSPM (R 4.3.0)\n##     hms                                 1.1.3      2023-03-21 [1] RSPM\n##     htmltools                           0.5.5      2023-03-23 [1] RSPM (R 4.3.0)\n##     htmlwidgets                         1.6.2      2023-03-17 [1] RSPM (R 4.3.0)\n##     httpuv                              1.6.9      2023-02-14 [1] RSPM (R 4.3.0)\n##     httr                                1.4.5      2023-02-24 [1] RSPM (R 4.3.0)\n##     httr2                               0.2.2      2022-09-25 [1] RSPM (R 4.3.0)\n##     ini                                 0.3.1      2018-05-20 [1] RSPM (R 4.3.0)\n##     interactiveDisplayBase              1.38.0     2023-04-25 [1] Bioconductor\n##     IRanges                             2.34.1     2023-06-22 [1] Bioconductor\n##     janeaustenr                         1.0.0      2022-08-26 [1] RSPM\n##     jquerylib                           0.1.4      2021-04-26 [1] RSPM (R 4.3.0)\n##     jsonlite                            1.8.4      2022-12-06 [1] RSPM (R 4.3.0)\n##     KEGGREST                            1.40.0     2023-04-25 [1] Bioconductor\n##     KernSmooth                          2.23-20    2021-05-03 [2] CRAN (R 4.3.0)\n##     knitr                               1.42       2023-01-25 [1] RSPM (R 4.3.0)\n##     lambda.r                            1.2.4      2019-09-18 [1] RSPM\n##     later                               1.3.0      2021-08-18 [1] RSPM (R 4.3.0)\n##     lattice                             0.21-8     2023-04-05 [2] CRAN (R 4.3.0)\n##     lazyeval                            0.2.2      2019-03-15 [1] RSPM\n##     lifecycle                           1.0.3      2022-10-07 [1] RSPM (R 4.3.0)\n##     littler                             0.3.18     2023-03-26 [1] RSPM (R 4.3.0)\n##     magrittr                            2.0.3      2022-03-30 [1] RSPM (R 4.3.0)\n##     MASS                                7.3-59     2023-04-21 [2] RSPM (R 4.3.0)\n##     Matrix                              1.5-4      2023-04-04 [2] CRAN (R 4.3.0)\n##     MatrixGenerics                      1.12.3     2023-07-30 [1] Bioconductor\n##     matrixStats                         1.0.0      2023-06-02 [1] RSPM\n##     memoise                             2.0.1      2021-11-26 [1] RSPM (R 4.3.0)\n##     methods                           * 4.3.0      2023-04-26 [2] local\n##     mgcv                                1.8-42     2023-03-02 [2] CRAN (R 4.3.0)\n##     mime                                0.12       2021-09-28 [1] RSPM (R 4.3.0)\n##     miniUI                              0.1.1.1    2018-05-18 [1] RSPM (R 4.3.0)\n##     nlme                                3.1-162    2023-01-31 [2] CRAN (R 4.3.0)\n##     nnet                                7.3-18     2022-09-28 [2] CRAN (R 4.3.0)\n##     openssl                             2.0.6      2023-03-09 [1] RSPM (R 4.3.0)\n##     org.Hs.eg.db                        3.17.0     2023-08-09 [1] Bioconductor\n##     packrat                             0.9.1      2023-02-27 [1] RSPM\n##     pak                                 0.5.1.9000 2023-08-02 [1] local\n##     parallel                            4.3.0      2023-04-26 [2] local\n##     pillar                              1.9.0      2023-03-22 [1] RSPM (R 4.3.0)\n##     pkgbuild                            1.4.0      2022-11-27 [1] RSPM (R 4.3.0)\n##     pkgconfig                           2.0.3      2019-09-22 [1] RSPM (R 4.3.0)\n##     pkgdown                             2.0.7      2022-12-14 [1] RSPM (R 4.3.0)\n##     pkgload                             1.3.2      2022-11-16 [1] RSPM (R 4.3.0)\n##   R plogr                               &lt;NA&gt;       &lt;NA&gt;       [?] &lt;NA&gt;\n##     plyranges                           1.20.0     2023-04-25 [1] Bioconductor\n##     png                                 0.1-8      2022-11-29 [1] RSPM\n##     praise                              1.0.0      2015-08-11 [1] RSPM (R 4.3.0)\n##     prettyunits                         1.1.1      2020-01-24 [1] RSPM (R 4.3.0)\n##     processx                            3.8.1      2023-04-18 [1] RSPM (R 4.3.0)\n##     profvis                             0.3.7      2020-11-02 [1] RSPM (R 4.3.0)\n##     progress                            1.2.2      2019-05-16 [1] RSPM\n##     promises                            1.2.0.1    2021-02-11 [1] RSPM (R 4.3.0)\n##     ProtGenerics                        1.32.0     2023-04-25 [1] Bioconductor\n##     ps                                  1.7.5      2023-04-18 [1] RSPM (R 4.3.0)\n##     purrr                               1.0.1      2023-01-10 [1] RSPM (R 4.3.0)\n##     quarto                              1.2        2022-07-06 [1] RSPM\n##     R6                                  2.5.1      2021-08-19 [1] RSPM (R 4.3.0)\n##     ragg                                1.2.5      2023-01-12 [1] RSPM (R 4.3.0)\n##     randomNames                         1.5-0.0    2021-04-22 [1] RSPM\n##     rappdirs                            0.3.3      2021-01-31 [1] RSPM (R 4.3.0)\n##     rcmdcheck                           1.4.0      2021-09-27 [1] RSPM (R 4.3.0)\n##     Rcpp                                1.0.10     2023-01-22 [1] RSPM (R 4.3.0)\n##     RCurl                               1.98-1.12  2023-03-27 [1] RSPM\n##     rebook                              1.10.1     2023-05-25 [1] Bioconductor\n##     rematch2                            2.1.2      2020-05-01 [1] RSPM (R 4.3.0)\n##     remotes                             2.4.2      2021-11-30 [1] RSPM (R 4.3.0)\n##     renv                                1.0.0      2023-07-07 [1] RSPM\n##     restfulr                            0.0.15     2022-06-16 [1] RSPM\n##     Rhtslib                             2.2.0      2023-04-25 [1] Bioconductor\n##     rjson                               0.2.21     2022-01-09 [1] RSPM\n##     rlang                               1.1.1      2023-04-28 [1] RSPM (R 4.3.0)\n##     rmarkdown                           2.21       2023-03-26 [1] RSPM (R 4.3.0)\n##     roxygen2                            7.2.3      2022-12-08 [1] RSPM (R 4.3.0)\n##     rpart                               4.1.19     2022-10-21 [2] CRAN (R 4.3.0)\n##     rprojroot                           2.0.3      2022-04-02 [1] RSPM (R 4.3.0)\n##     Rsamtools                           2.16.0     2023-04-25 [1] Bioconductor\n##     rsconnect                           1.0.1      2023-07-20 [1] RSPM\n##     RSQLite                             2.3.1      2023-04-03 [1] RSPM\n##     rstudioapi                          0.14       2022-08-22 [1] RSPM (R 4.3.0)\n##     rtracklayer                         1.60.0     2023-04-25 [1] Bioconductor\n##     rversions                           2.1.2      2022-08-31 [1] RSPM (R 4.3.0)\n##     S4Arrays                            1.0.5      2023-07-24 [1] Bioconductor\n##     S4Vectors                           0.38.1     2023-05-02 [1] Bioconductor\n##     sass                                0.4.5      2023-01-24 [1] RSPM (R 4.3.0)\n##     sessioninfo                         1.2.2      2021-12-06 [1] RSPM (R 4.3.0)\n##     shiny                               1.7.4      2022-12-15 [1] RSPM (R 4.3.0)\n##     snow                                0.4-4      2021-10-27 [1] RSPM\n##     SnowballC                           0.7.1      2023-04-25 [1] RSPM\n##     sourcetools                         0.1.7-1    2023-02-01 [1] RSPM (R 4.3.0)\n##     spatial                             7.3-16     2023-01-23 [2] CRAN (R 4.3.0)\n##     splines                             4.3.0      2023-04-26 [2] local\n##     stats                             * 4.3.0      2023-04-26 [2] local\n##     stats4                              4.3.0      2023-04-26 [2] local\n##     stringdist                          0.9.10     2022-11-07 [1] RSPM\n##     stringi                             1.7.12     2023-01-11 [1] RSPM (R 4.3.0)\n##     stringr                             1.5.0      2022-12-02 [1] RSPM (R 4.3.0)\n##     SummarizedExperiment                1.30.2     2023-06-06 [1] Bioconductor\n##     survival                            3.5-5      2023-03-12 [2] CRAN (R 4.3.0)\n##     sys                                 3.4.1      2022-10-18 [1] RSPM (R 4.3.0)\n##     systemfonts                         1.0.4      2022-02-11 [1] RSPM (R 4.3.0)\n##     tcltk                               4.3.0      2023-04-26 [2] local\n##     testthat                            3.1.7      2023-03-12 [1] RSPM (R 4.3.0)\n##     textshaping                         0.3.6      2021-10-13 [1] RSPM (R 4.3.0)\n##     tibble                              3.2.1      2023-03-20 [1] RSPM (R 4.3.0)\n##     tidyr                               1.3.0      2023-01-24 [1] RSPM\n##     tidyselect                          1.2.0      2022-10-10 [1] RSPM\n##     tidytext                            0.4.1      2023-01-07 [1] RSPM\n##     tinytex                             0.45       2023-04-18 [1] RSPM (R 4.3.0)\n##     tokenizers                          0.3.0      2022-12-22 [1] RSPM\n##     tools                               4.3.0      2023-04-26 [2] local\n##     toOrdinal                           1.3-0.0    2022-02-24 [1] RSPM\n##     TxDb.Hsapiens.UCSC.hg19.knownGene   3.2.2      2023-08-09 [1] Bioconductor\n##     urlchecker                          1.0.1      2021-11-30 [1] RSPM (R 4.3.0)\n##     usethis                             2.1.6      2022-05-25 [1] RSPM (R 4.3.0)\n##     utf8                                1.2.3      2023-01-31 [1] RSPM (R 4.3.0)\n##     utils                             * 4.3.0      2023-04-26 [2] local\n##     vctrs                               0.6.2      2023-04-19 [1] RSPM (R 4.3.0)\n##     waldo                               0.4.0      2022-03-16 [1] RSPM (R 4.3.0)\n##     whisker                             0.4.1      2022-12-05 [1] RSPM (R 4.3.0)\n##     withr                               2.5.0      2022-03-03 [1] RSPM (R 4.3.0)\n##     xfun                                0.39       2023-04-20 [1] RSPM (R 4.3.0)\n##     XML                                 3.99-0.14  2023-03-19 [1] RSPM\n##     xml2                                1.3.4      2023-04-27 [1] RSPM (R 4.3.0)\n##     xopen                               1.0.0      2018-09-17 [1] RSPM (R 4.3.0)\n##     xtable                              1.8-4      2019-04-21 [1] RSPM (R 4.3.0)\n##     XVector                             0.40.0     2023-04-25 [1] Bioconductor\n##     yaml                                2.3.7      2023-01-23 [1] RSPM (R 4.3.0)\n##     yesno                               0.1.2      2020-07-10 [1] RSPM\n##     zip                                 2.3.0      2023-04-17 [1] RSPM (R 4.3.0)\n##     zlibbioc                            1.46.0     2023-04-25 [1] Bioconductor\n##  \n##   [1] /usr/local/lib/R/site-library\n##   [2] /usr/local/lib/R/library\n##  \n##   R ‚îÄ‚îÄ Package was removed from disk.\n##  \n##  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "pages/join-is-an-overlap.html",
    "href": "pages/join-is-an-overlap.html",
    "title": "\n1¬† Join is an overlap\n",
    "section": "",
    "text": "Objectives\n\n\n\n\nLearn that a join operation implies finding overlapping data in two tables, according to some particular criterion.\n\n\n\nWe start with a quick example explaining why we use functions called join. Later we will extend from simple tables to examples making use of genomic ranges.\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(randomNames)\n\nLet‚Äôs set up a simulation where we have 17 classmates (not counting ourselves) in a school of 118. Suppose every member of the class has 12 friends outside of class.\nWe want to find out, for each classmate, how many friends we have in common and also, of our shared friends, what is a typical birthday. Let‚Äôs define typical as the median birthday of our shared friends.\n\nm &lt;- 17 # size of class\nn &lt;- 100 # size of others in school\nnf &lt;- 12 # number of friends outside class\nset.seed(5)\npeople &lt;- randomNames(\n    m + n,\n    name.order=\"first.last\",\n    name.sep=\" \"\n)\n\nWe define the population of potential friends (those outside the class) as pop, and our 12 friends are in friends. Finally, we define the people that are in our class as class_people.\n\npop &lt;- data.frame(\n    person=people[-(1:m)],\n    birthday=sample(31, n, TRUE)\n)\nfriends &lt;- data.frame(friend=sample(people, nf))\nclass_people &lt;- people[1:m]\n\nThe following sets up a data.frame, where each row gives, for a given classmate, their friends, and the friends‚Äô birthdays.\n\nloop &lt;- rep(1:m, each=nf)\nidx &lt;- as.vector(replicate(m, sample(n, nf)))\nclass &lt;- data.frame(\n    classmate=class_people[loop],\n    friend=pop$person[idx],\n    birthday=pop$birthday[idx]\n)\n\nSort this by classmate alphabetically, and make classmate into a factor. This last step is important, as it will help us to keep track of the classmates for whom we share no friends outside of class.\n\nclass &lt;- class |&gt; \n  arrange(classmate) |&gt; \n  mutate(classmate=factor(classmate))\n\nWe perform an inner_join by \"friend\". This just means we look for classmates where we have overlapping friends, and we drop the rows where we don‚Äôt share any friends. ‚ÄúInner‚Äù refers to the fact that we are keeping the overlap in the inside of two intersecting circles. Note that the join operation brings along the metadata (extra data) about the friends‚Äô birthdays.\n\nshared_friends &lt;- friends |&gt; \n  inner_join(class, by=\"friend\") |&gt; \n  arrange(classmate, friend) |&gt; \n  relocate(classmate) # classmate to 1st column\nshared_friends\n##                 classmate             friend birthday\n##  1          Brandon Jones Christopher Rivera       13\n##  2          Brandon Jones       Jose Jimenez       26\n##  3          Brandon Jones    Maria Hernandez       15\n##  4          Brandon Jones         Tuli Hoang        7\n##  5     Christopher Herron         Tuli Hoang        7\n##  6     Christopher Herron  William Steinbach       15\n##  7         Haley Polhamus   Cellene Millhone       23\n##  8         Haley Polhamus  William Steinbach       15\n##  9  Juan Villegas Cabrera     Alyssa Kinanee       30\n##  10 Juan Villegas Cabrera       Malik Gammon        5\n##  11 Juan Villegas Cabrera     Tajhae Bohanna       31\n##  12     Maisara el-Arshad     Kaylyn Judkins        2\n##  13     Maisara el-Arshad    Maria Hernandez       15\n##  14     Maisara el-Arshad     Tajhae Bohanna       31\n##  15        Michael Mcgill Christopher Rivera       13\n##  16        Michael Mcgill    Maria Hernandez       15\n##  17        Noah Pettinger     Kaylyn Judkins        2\n##  18        Noah Pettinger     Tajhae Bohanna       31\n##  19         Orion Villani       Malik Gammon        5\n##  20         Shane Ranaldi     Alyssa Kinanee       30\n##  21         Shane Ranaldi  William Steinbach       15\n##  22   Stephanie Hernandez Asmaa el-Abdelnour       29\n##  23   Zachary Roe-Huffman    Maria Hernandez       15\n\nLastly, we perform some summarization: compute the number of friends in common with n() and the median birthday of shared friends. The complete call at the end fills in 0 for those classmates for whom we share no friends (here, the use of factor earlier becomes relevant). We can choose which columns to fill in, and what value to add.\n\nshared_friends |&gt; \n  group_by(classmate) |&gt; \n  summarize(in_common=n(), median_bday=median(birthday)) |&gt; \n  complete(classmate, fill=list(in_common=0,median_bday=-1))\n##  # A tibble: 17 √ó 3\n##    classmate             in_common median_bday\n##    &lt;fct&gt;                     &lt;int&gt;       &lt;dbl&gt;\n##  1 Aaliyah Minter                0          -1\n##  2 Brandon Jones                 4          14\n##  3 Christopher Herron            2          11\n##  4 Collin Leon                   0          -1\n##  5 Haley Polhamus                2          19\n##  6 Juan Villegas Cabrera         3          30\n##  # ‚Ñπ 11 more rows\n\nSession info\n\n\n\n\n\n\nClick to expand üëá\n\n\n\n\n\n\nsessioninfo::session_info(\n    installed.packages()[,\"Package\"], \n    include_base = TRUE\n)\n##  ‚îÄ Session info ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n##   setting  value\n##   version  R version 4.3.0 (2023-04-21)\n##   os       Ubuntu 22.04.2 LTS\n##   system   x86_64, linux-gnu\n##   ui       X11\n##   language (EN)\n##   collate  en_US.UTF-8\n##   ctype    en_US.UTF-8\n##   tz       Etc/UTC\n##   date     2023-08-09\n##   pandoc   2.19.2 @ /usr/local/bin/ (via rmarkdown)\n##  \n##  ‚îÄ Packages ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n##   ! package                           * version    date (UTC) lib source\n##     abind                               1.4-5      2016-07-21 [1] RSPM\n##     AnnotationDbi                       1.62.2     2023-07-02 [1] Bioconductor\n##     AnnotationFilter                    1.24.0     2023-04-25 [1] Bioconductor\n##     AnnotationHub                       3.8.0      2023-04-25 [1] Bioconductor\n##     askpass                             1.1        2019-01-13 [1] RSPM (R 4.3.0)\n##     available                           1.1.0      2022-07-10 [1] RSPM\n##     base                              * 4.3.0      2023-04-26 [2] local\n##     base64enc                           0.1-3      2015-07-28 [1] RSPM (R 4.3.0)\n##     BH                                  1.81.0-1   2023-01-22 [1] RSPM\n##     Biobase                             2.60.0     2023-04-25 [1] Bioconductor\n##     BiocBook                            0.99.0     2023-08-09 [1] Github (js2264/BiocBook@bc297de)\n##     BiocBook.GRanges                    0.99.0     2023-08-09 [1] local\n##     BiocFileCache                       2.8.0      2023-04-25 [1] Bioconductor\n##     BiocGenerics                        0.46.0     2023-04-25 [1] Bioconductor\n##     BiocIO                              1.10.0     2023-04-25 [1] Bioconductor\n##     BiocManager                         1.30.20    2023-02-24 [1] CRAN (R 4.3.0)\n##     BiocParallel                        1.34.2     2023-05-22 [1] Bioconductor\n##     BiocStyle                           2.28.0     2023-04-25 [1] Bioconductor\n##     BiocVersion                         3.17.1     2022-11-04 [1] Bioconductor\n##     biomaRt                             2.56.1     2023-06-09 [1] Bioconductor\n##     Biostrings                          2.68.1     2023-05-16 [1] Bioconductor\n##     bit                                 4.0.5      2022-11-15 [1] RSPM\n##     bit64                               4.0.5      2020-08-30 [1] RSPM\n##     bitops                              1.0-7      2021-04-24 [1] RSPM\n##     blob                                1.2.4      2023-03-17 [1] RSPM\n##     bookdown                            0.34       2023-05-09 [1] RSPM\n##     boot                                1.3-28.1   2022-11-22 [2] CRAN (R 4.3.0)\n##     brew                                1.0-8      2022-09-29 [1] RSPM (R 4.3.0)\n##     brio                                1.1.3      2021-11-30 [1] RSPM (R 4.3.0)\n##     bslib                               0.4.2      2022-12-16 [1] RSPM (R 4.3.0)\n##     cachem                              1.0.7      2023-02-24 [1] RSPM (R 4.3.0)\n##     callr                               3.7.3      2022-11-02 [1] RSPM (R 4.3.0)\n##     class                               7.3-21     2023-01-23 [2] CRAN (R 4.3.0)\n##     cli                                 3.6.1      2023-03-23 [1] RSPM (R 4.3.0)\n##     clipr                               0.8.0      2022-02-22 [1] RSPM (R 4.3.0)\n##     clisymbols                          1.2.0      2017-05-21 [1] RSPM\n##     cluster                             2.1.4      2022-08-22 [2] CRAN (R 4.3.0)\n##     CodeDepends                         0.6.5      2018-07-17 [1] RSPM\n##     codetools                           0.2-19     2023-02-01 [2] CRAN (R 4.3.0)\n##     commonmark                          1.9.0      2023-03-17 [1] RSPM (R 4.3.0)\n##     compiler                            4.3.0      2023-04-26 [2] local\n##     cpp11                               0.4.3      2022-10-12 [1] RSPM (R 4.3.0)\n##     crayon                              1.5.2      2022-09-29 [1] RSPM (R 4.3.0)\n##     credentials                         1.3.2      2021-11-29 [1] RSPM (R 4.3.0)\n##     crosstalk                           1.2.0      2021-11-04 [1] RSPM\n##     curl                                5.0.0      2023-01-12 [1] RSPM (R 4.3.0)\n##     data.table                          1.14.8     2023-02-17 [1] RSPM\n##     datasets                          * 4.3.0      2023-04-26 [2] local\n##     DBI                                 1.1.3      2022-06-18 [1] RSPM\n##     dbplyr                              2.3.3      2023-07-07 [1] RSPM\n##     DelayedArray                        0.26.7     2023-07-28 [1] Bioconductor\n##     desc                                1.4.2      2022-09-08 [1] RSPM (R 4.3.0)\n##     devtools                            2.4.5      2022-10-11 [1] RSPM (R 4.3.0)\n##     diffobj                             0.3.5      2021-10-05 [1] RSPM (R 4.3.0)\n##     digest                              0.6.31     2022-12-11 [1] RSPM (R 4.3.0)\n##     dir.expiry                          1.8.0      2023-04-25 [1] Bioconductor\n##     docopt                              0.7.1      2020-06-24 [1] RSPM (R 4.3.0)\n##     downlit                             0.4.2      2022-07-05 [1] RSPM (R 4.3.0)\n##     dplyr                             * 1.1.2      2023-04-20 [1] RSPM\n##     DT                                  0.28       2023-05-18 [1] RSPM\n##     ellipsis                            0.3.2      2021-04-29 [1] RSPM (R 4.3.0)\n##     ensembldb                           2.24.0     2023-04-25 [1] Bioconductor\n##     evaluate                            0.20       2023-01-17 [1] RSPM (R 4.3.0)\n##     fansi                               1.0.4      2023-01-22 [1] RSPM (R 4.3.0)\n##     fastmap                             1.1.1      2023-02-24 [1] RSPM (R 4.3.0)\n##     filelock                            1.0.2      2018-10-05 [1] RSPM\n##     fontawesome                         0.5.1      2023-04-18 [1] RSPM (R 4.3.0)\n##     foreign                             0.8-84     2022-12-06 [2] CRAN (R 4.3.0)\n##     formatR                             1.14       2023-01-17 [1] RSPM\n##     fs                                  1.6.2      2023-04-25 [1] RSPM (R 4.3.0)\n##     futile.logger                       1.4.3      2016-07-10 [1] RSPM\n##     futile.options                      1.0.1      2018-04-20 [1] RSPM\n##     generics                            0.1.3      2022-07-05 [1] RSPM\n##     GenomeInfoDb                        1.36.1     2023-06-21 [1] Bioconductor\n##     GenomeInfoDbData                    1.2.10     2023-08-09 [1] Bioconductor\n##     GenomicAlignments                   1.36.0     2023-04-25 [1] Bioconductor\n##     GenomicFeatures                     1.52.1     2023-06-22 [1] Bioconductor\n##     GenomicRanges                       1.52.0     2023-04-25 [1] Bioconductor\n##     gert                                1.9.2      2022-12-05 [1] RSPM (R 4.3.0)\n##     gh                                  1.4.0      2023-02-22 [1] RSPM (R 4.3.0)\n##     gitcreds                            0.1.2      2022-09-08 [1] RSPM (R 4.3.0)\n##     glue                                1.6.2      2022-02-24 [1] RSPM (R 4.3.0)\n##     graph                               1.78.0     2023-04-25 [1] Bioconductor\n##     graphics                          * 4.3.0      2023-04-26 [2] local\n##     grDevices                         * 4.3.0      2023-04-26 [2] local\n##     grid                                4.3.0      2023-04-26 [2] local\n##     highr                               0.10       2022-12-22 [1] RSPM (R 4.3.0)\n##     hms                                 1.1.3      2023-03-21 [1] RSPM\n##     htmltools                           0.5.5      2023-03-23 [1] RSPM (R 4.3.0)\n##     htmlwidgets                         1.6.2      2023-03-17 [1] RSPM (R 4.3.0)\n##     httpuv                              1.6.9      2023-02-14 [1] RSPM (R 4.3.0)\n##     httr                                1.4.5      2023-02-24 [1] RSPM (R 4.3.0)\n##     httr2                               0.2.2      2022-09-25 [1] RSPM (R 4.3.0)\n##     ini                                 0.3.1      2018-05-20 [1] RSPM (R 4.3.0)\n##     interactiveDisplayBase              1.38.0     2023-04-25 [1] Bioconductor\n##     IRanges                             2.34.1     2023-06-22 [1] Bioconductor\n##     janeaustenr                         1.0.0      2022-08-26 [1] RSPM\n##     jquerylib                           0.1.4      2021-04-26 [1] RSPM (R 4.3.0)\n##     jsonlite                            1.8.4      2022-12-06 [1] RSPM (R 4.3.0)\n##     KEGGREST                            1.40.0     2023-04-25 [1] Bioconductor\n##     KernSmooth                          2.23-20    2021-05-03 [2] CRAN (R 4.3.0)\n##     knitr                               1.42       2023-01-25 [1] RSPM (R 4.3.0)\n##     lambda.r                            1.2.4      2019-09-18 [1] RSPM\n##     later                               1.3.0      2021-08-18 [1] RSPM (R 4.3.0)\n##     lattice                             0.21-8     2023-04-05 [2] CRAN (R 4.3.0)\n##     lazyeval                            0.2.2      2019-03-15 [1] RSPM\n##     lifecycle                           1.0.3      2022-10-07 [1] RSPM (R 4.3.0)\n##     littler                             0.3.18     2023-03-26 [1] RSPM (R 4.3.0)\n##     magrittr                            2.0.3      2022-03-30 [1] RSPM (R 4.3.0)\n##     MASS                                7.3-59     2023-04-21 [2] RSPM (R 4.3.0)\n##     Matrix                              1.5-4      2023-04-04 [2] CRAN (R 4.3.0)\n##     MatrixGenerics                      1.12.3     2023-07-30 [1] Bioconductor\n##     matrixStats                         1.0.0      2023-06-02 [1] RSPM\n##     memoise                             2.0.1      2021-11-26 [1] RSPM (R 4.3.0)\n##     methods                           * 4.3.0      2023-04-26 [2] local\n##     mgcv                                1.8-42     2023-03-02 [2] CRAN (R 4.3.0)\n##     mime                                0.12       2021-09-28 [1] RSPM (R 4.3.0)\n##     miniUI                              0.1.1.1    2018-05-18 [1] RSPM (R 4.3.0)\n##     nlme                                3.1-162    2023-01-31 [2] CRAN (R 4.3.0)\n##     nnet                                7.3-18     2022-09-28 [2] CRAN (R 4.3.0)\n##     openssl                             2.0.6      2023-03-09 [1] RSPM (R 4.3.0)\n##     org.Hs.eg.db                        3.17.0     2023-08-09 [1] Bioconductor\n##     packrat                             0.9.1      2023-02-27 [1] RSPM\n##     pak                                 0.5.1.9000 2023-08-02 [1] local\n##     parallel                            4.3.0      2023-04-26 [2] local\n##     pillar                              1.9.0      2023-03-22 [1] RSPM (R 4.3.0)\n##     pkgbuild                            1.4.0      2022-11-27 [1] RSPM (R 4.3.0)\n##     pkgconfig                           2.0.3      2019-09-22 [1] RSPM (R 4.3.0)\n##     pkgdown                             2.0.7      2022-12-14 [1] RSPM (R 4.3.0)\n##     pkgload                             1.3.2      2022-11-16 [1] RSPM (R 4.3.0)\n##   R plogr                               &lt;NA&gt;       &lt;NA&gt;       [?] &lt;NA&gt;\n##     plyranges                           1.20.0     2023-04-25 [1] Bioconductor\n##     png                                 0.1-8      2022-11-29 [1] RSPM\n##     praise                              1.0.0      2015-08-11 [1] RSPM (R 4.3.0)\n##     prettyunits                         1.1.1      2020-01-24 [1] RSPM (R 4.3.0)\n##     processx                            3.8.1      2023-04-18 [1] RSPM (R 4.3.0)\n##     profvis                             0.3.7      2020-11-02 [1] RSPM (R 4.3.0)\n##     progress                            1.2.2      2019-05-16 [1] RSPM\n##     promises                            1.2.0.1    2021-02-11 [1] RSPM (R 4.3.0)\n##     ProtGenerics                        1.32.0     2023-04-25 [1] Bioconductor\n##     ps                                  1.7.5      2023-04-18 [1] RSPM (R 4.3.0)\n##     purrr                               1.0.1      2023-01-10 [1] RSPM (R 4.3.0)\n##     quarto                              1.2        2022-07-06 [1] RSPM\n##     R6                                  2.5.1      2021-08-19 [1] RSPM (R 4.3.0)\n##     ragg                                1.2.5      2023-01-12 [1] RSPM (R 4.3.0)\n##     randomNames                       * 1.5-0.0    2021-04-22 [1] RSPM\n##     rappdirs                            0.3.3      2021-01-31 [1] RSPM (R 4.3.0)\n##     rcmdcheck                           1.4.0      2021-09-27 [1] RSPM (R 4.3.0)\n##     Rcpp                                1.0.10     2023-01-22 [1] RSPM (R 4.3.0)\n##     RCurl                               1.98-1.12  2023-03-27 [1] RSPM\n##     rebook                              1.10.1     2023-05-25 [1] Bioconductor\n##     rematch2                            2.1.2      2020-05-01 [1] RSPM (R 4.3.0)\n##     remotes                             2.4.2      2021-11-30 [1] RSPM (R 4.3.0)\n##     renv                                1.0.0      2023-07-07 [1] RSPM\n##     restfulr                            0.0.15     2022-06-16 [1] RSPM\n##     Rhtslib                             2.2.0      2023-04-25 [1] Bioconductor\n##     rjson                               0.2.21     2022-01-09 [1] RSPM\n##     rlang                               1.1.1      2023-04-28 [1] RSPM (R 4.3.0)\n##     rmarkdown                           2.21       2023-03-26 [1] RSPM (R 4.3.0)\n##     roxygen2                            7.2.3      2022-12-08 [1] RSPM (R 4.3.0)\n##     rpart                               4.1.19     2022-10-21 [2] CRAN (R 4.3.0)\n##     rprojroot                           2.0.3      2022-04-02 [1] RSPM (R 4.3.0)\n##     Rsamtools                           2.16.0     2023-04-25 [1] Bioconductor\n##     rsconnect                           1.0.1      2023-07-20 [1] RSPM\n##     RSQLite                             2.3.1      2023-04-03 [1] RSPM\n##     rstudioapi                          0.14       2022-08-22 [1] RSPM (R 4.3.0)\n##     rtracklayer                         1.60.0     2023-04-25 [1] Bioconductor\n##     rversions                           2.1.2      2022-08-31 [1] RSPM (R 4.3.0)\n##     S4Arrays                            1.0.5      2023-07-24 [1] Bioconductor\n##     S4Vectors                           0.38.1     2023-05-02 [1] Bioconductor\n##     sass                                0.4.5      2023-01-24 [1] RSPM (R 4.3.0)\n##     sessioninfo                         1.2.2      2021-12-06 [1] RSPM (R 4.3.0)\n##     shiny                               1.7.4      2022-12-15 [1] RSPM (R 4.3.0)\n##     snow                                0.4-4      2021-10-27 [1] RSPM\n##     SnowballC                           0.7.1      2023-04-25 [1] RSPM\n##     sourcetools                         0.1.7-1    2023-02-01 [1] RSPM (R 4.3.0)\n##     spatial                             7.3-16     2023-01-23 [2] CRAN (R 4.3.0)\n##     splines                             4.3.0      2023-04-26 [2] local\n##     stats                             * 4.3.0      2023-04-26 [2] local\n##     stats4                              4.3.0      2023-04-26 [2] local\n##     stringdist                          0.9.10     2022-11-07 [1] RSPM\n##     stringi                             1.7.12     2023-01-11 [1] RSPM (R 4.3.0)\n##     stringr                             1.5.0      2022-12-02 [1] RSPM (R 4.3.0)\n##     SummarizedExperiment                1.30.2     2023-06-06 [1] Bioconductor\n##     survival                            3.5-5      2023-03-12 [2] CRAN (R 4.3.0)\n##     sys                                 3.4.1      2022-10-18 [1] RSPM (R 4.3.0)\n##     systemfonts                         1.0.4      2022-02-11 [1] RSPM (R 4.3.0)\n##     tcltk                               4.3.0      2023-04-26 [2] local\n##     testthat                            3.1.7      2023-03-12 [1] RSPM (R 4.3.0)\n##     textshaping                         0.3.6      2021-10-13 [1] RSPM (R 4.3.0)\n##     tibble                              3.2.1      2023-03-20 [1] RSPM (R 4.3.0)\n##     tidyr                             * 1.3.0      2023-01-24 [1] RSPM\n##     tidyselect                          1.2.0      2022-10-10 [1] RSPM\n##     tidytext                            0.4.1      2023-01-07 [1] RSPM\n##     tinytex                             0.45       2023-04-18 [1] RSPM (R 4.3.0)\n##     tokenizers                          0.3.0      2022-12-22 [1] RSPM\n##     tools                               4.3.0      2023-04-26 [2] local\n##     toOrdinal                           1.3-0.0    2022-02-24 [1] RSPM\n##     TxDb.Hsapiens.UCSC.hg19.knownGene   3.2.2      2023-08-09 [1] Bioconductor\n##     urlchecker                          1.0.1      2021-11-30 [1] RSPM (R 4.3.0)\n##     usethis                             2.1.6      2022-05-25 [1] RSPM (R 4.3.0)\n##     utf8                                1.2.3      2023-01-31 [1] RSPM (R 4.3.0)\n##     utils                             * 4.3.0      2023-04-26 [2] local\n##     vctrs                               0.6.2      2023-04-19 [1] RSPM (R 4.3.0)\n##     waldo                               0.4.0      2022-03-16 [1] RSPM (R 4.3.0)\n##     whisker                             0.4.1      2022-12-05 [1] RSPM (R 4.3.0)\n##     withr                               2.5.0      2022-03-03 [1] RSPM (R 4.3.0)\n##     xfun                                0.39       2023-04-20 [1] RSPM (R 4.3.0)\n##     XML                                 3.99-0.14  2023-03-19 [1] RSPM\n##     xml2                                1.3.4      2023-04-27 [1] RSPM (R 4.3.0)\n##     xopen                               1.0.0      2018-09-17 [1] RSPM (R 4.3.0)\n##     xtable                              1.8-4      2019-04-21 [1] RSPM (R 4.3.0)\n##     XVector                             0.40.0     2023-04-25 [1] Bioconductor\n##     yaml                                2.3.7      2023-01-23 [1] RSPM (R 4.3.0)\n##     yesno                               0.1.2      2020-07-10 [1] RSPM\n##     zip                                 2.3.0      2023-04-17 [1] RSPM (R 4.3.0)\n##     zlibbioc                            1.46.0     2023-04-25 [1] Bioconductor\n##  \n##   [1] /usr/local/lib/R/site-library\n##   [2] /usr/local/lib/R/library\n##  \n##   R ‚îÄ‚îÄ Package was removed from disk.\n##  \n##  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "pages/compute-overlaps.html",
    "href": "pages/compute-overlaps.html",
    "title": "\n2¬† Compute overlaps\n",
    "section": "",
    "text": "Objectives\n\n\n\n\nCompute overlaps and summary statistics between two sets of genomic ranges\n\n\n\nSuppose we want to compute the mean genomic extent (distance from left-most to right-most basepair) of genes overlapping a set of query ranges.\nWe move on from the ‚Äúclassroom example‚Äù by seeing how we compute overlaps when the features are in genomic space. We will use GRanges in the Bioconductor package GenomicRanges (Lawrence et al. 2013) to represent the features and plyranges (Lee, Cook, and Lawrence 2019) to compute the overlaps, similarly to how we used dplyr to compute the overlaps in the previous analysis. So data.frame is to dplyr as GRanges is to plyranges.\n\nLawrence, Michael, Wolfgang Huber, Herv√© Pag√®s, Patrick Aboyoun, Marc Carlson, Robert Gentleman, Martin T Morgan, and Vincent J Carey. 2013. ‚ÄúSoftware for Computing and Annotating Genomic Ranges.‚Äù PLoS Comput. Biol. 9 (8): e1003118.\n\nLee, Stuart, Dianne Cook, and Michael Lawrence. 2019. ‚ÄúPlyranges: A Grammar of Genomic Data Transformation.‚Äù Genome Biol. 20 (1): 4.\n\nlibrary(plyranges)\n\nNote the structure of the GRanges object. We can create a GRanges from a data.frame by specifying two of: start, end, or width.\n\ndf &lt;- data.frame(\n    seqnames=\"chr1\",\n    start=1 + c(34e6,36e6,36.6e6),\n    width=c(2e5,2e5,1e5),\n    strand=c(\"+\",\"-\",\"-\"),\n    range_id=factor(c(\"foo\",\"bar\",\"boo\")))\nr &lt;- as_granges(df)\nr\n##  GRanges object with 3 ranges and 1 metadata column:\n##        seqnames            ranges strand | range_id\n##           &lt;Rle&gt;         &lt;IRanges&gt;  &lt;Rle&gt; | &lt;factor&gt;\n##    [1]     chr1 34000001-34200000      + |      foo\n##    [2]     chr1 36000001-36200000      - |      bar\n##    [3]     chr1 36600001-36700000      - |      boo\n##    -------\n##    seqinfo: 1 sequence from an unspecified genome; no seqlengths\n\nIn case you haven‚Äôt seen this before, GRanges objects have specific functions to pull out information. See ?GRanges for details.\n\nlength(r)\n##  [1] 3\nseqnames(r)\n##  factor-Rle of length 3 with 1 run\n##    Lengths:    3\n##    Values : chr1\n##  Levels(1): chr1\nstrand(r)\n##  factor-Rle of length 3 with 2 runs\n##    Lengths: 1 2\n##    Values : + -\n##  Levels(3): + - *\n\nLet‚Äôs use plyranges to find the genes that overlap a region of interest.\nTypically, it is prefered to use Ensembl or GENCODE gene annotation, the latter of which can by obtained from AnnotationHub. Ensembl gene annotation can be easily manipulated with the ensembldb package (Rainer, Gatto, and Weichenberger 2019). Provided is some example code in an unevaluated code chunk:\n\nRainer, Johannes, Laurent Gatto, and Christian X Weichenberger. 2019. ‚Äúensembldb: an R package to create and use Ensembl-based annotation resources.‚Äù Bioinformatics 35 (17): 3151‚Äì53. https://doi.org/10.1093/bioinformatics/btz031.\n\nlibrary(ensembldb)\nedb &lt;- ... # obtain from AnnotationHub or from GTF file\ng &lt;- genes(edb)\n\nHere, we will work with a static TxDb that is distributed as an annotation package in Bioconductor. We use this TxDb because it is an older genome release (hg19) that matches some ranges we will work with later, but generally it is recommended to use a recent (and versioned) Ensembl or GENCODE gene annotation.\n\nlibrary(TxDb.Hsapiens.UCSC.hg19.knownGene)\n\nThe same function can be used to extract the gene ranges:\n\ng &lt;- genes(TxDb.Hsapiens.UCSC.hg19.knownGene)\n##    403 genes were dropped because they have exons located on both\n##    strands of the same reference sequence or on more than one reference\n##    sequence, so cannot be represented by a single genomic range.\n##    Use 'single.strand.genes.only=FALSE' to get all the genes in a\n##    GRangesList object, or use suppressMessages() to suppress this\n##    message.\ng &lt;- keepStandardChromosomes(g, pruning.mode=\"coarse\")\ng\n##  GRanges object with 23033 ranges and 1 metadata column:\n##          seqnames              ranges strand |     gene_id\n##             &lt;Rle&gt;           &lt;IRanges&gt;  &lt;Rle&gt; | &lt;character&gt;\n##        1    chr19   58858172-58874214      - |           1\n##       10     chr8   18248755-18258723      + |          10\n##      100    chr20   43248163-43280376      - |         100\n##     1000    chr18   25530930-25757445      - |        1000\n##    10000     chr1 243651535-244006886      - |       10000\n##      ...      ...                 ...    ... .         ...\n##     9991     chr9 114979995-115095944      - |        9991\n##     9992    chr21   35736323-35743440      + |        9992\n##     9993    chr22   19023795-19109967      - |        9993\n##     9994     chr6   90539619-90584155      + |        9994\n##     9997    chr22   50961997-50964905      - |        9997\n##    -------\n##    seqinfo: 25 sequences (1 circular) from hg19 genome\n\nNow we are ready to test for overlaps. A left join gives us all the overlaps for ranges on the left side (here r). If a range on the left has no overlaps it appears with NA for the metadata columns of the right side ranges. If a range on the left side has multiple overlaps with the right side, it will appear multiple times in the output.\nKeeping reading below on how to deal with this, if it is desired to have statistics on per-range overlaps.\n\nr |&gt; join_overlap_left(g)\n##  GRanges object with 10 ranges and 2 metadata columns:\n##         seqnames            ranges strand | range_id     gene_id\n##            &lt;Rle&gt;         &lt;IRanges&gt;  &lt;Rle&gt; | &lt;factor&gt; &lt;character&gt;\n##     [1]     chr1 34000001-34200000      + |      foo      114784\n##     [2]     chr1 36000001-36200000      - |      bar      127703\n##     [3]     chr1 36000001-36200000      - |      bar       23154\n##     [4]     chr1 36000001-36200000      - |      bar      339488\n##     [5]     chr1 36000001-36200000      - |      bar        5690\n##     [6]     chr1 36000001-36200000      - |      bar       63967\n##     [7]     chr1 36000001-36200000      - |      bar       79932\n##     [8]     chr1 36600001-36700000      - |      boo       27095\n##     [9]     chr1 36600001-36700000      - |      boo       55700\n##    [10]     chr1 36600001-36700000      - |      boo        9967\n##    -------\n##    seqinfo: 1 sequence from an unspecified genome; no seqlengths\n\nIf we want to exclude the zero matches cases, we can use an inner join:\n\nr |&gt; join_overlap_inner(g)\n##  GRanges object with 10 ranges and 2 metadata columns:\n##         seqnames            ranges strand | range_id     gene_id\n##            &lt;Rle&gt;         &lt;IRanges&gt;  &lt;Rle&gt; | &lt;factor&gt; &lt;character&gt;\n##     [1]     chr1 34000001-34200000      + |      foo      114784\n##     [2]     chr1 36000001-36200000      - |      bar      127703\n##     [3]     chr1 36000001-36200000      - |      bar       23154\n##     [4]     chr1 36000001-36200000      - |      bar      339488\n##     [5]     chr1 36000001-36200000      - |      bar        5690\n##     [6]     chr1 36000001-36200000      - |      bar       63967\n##     [7]     chr1 36000001-36200000      - |      bar       79932\n##     [8]     chr1 36600001-36700000      - |      boo       27095\n##     [9]     chr1 36600001-36700000      - |      boo       55700\n##    [10]     chr1 36600001-36700000      - |      boo        9967\n##    -------\n##    seqinfo: 1 sequence from an unspecified genome; no seqlengths\n\n\n\n\n\n\n\nNote\n\n\n\nWhat about other types of overlap? We can specify a distance, called a ‚Äúgap‚Äù, if we want to also find when ranges are near each other, up to a maximum allowed distance. We can also specify the minimum amount of overlapping basepairs. Every overlap function in plyranges has arguments maxgap and minoverlap. For example, to see if ranges are 50kb from each other, we would specify maxgap=5e4. If we want to know if ranges are 50kb from a particular endpoint of another set of ranges, for example TSS, we could perform the operations anchor_5p() followed by mutate(width=1), before overlapping the sets.\n\n\nWe can also perform summarization by columns either in the r or the g object:\n\nr |&gt; \n    join_overlap_inner(g) |&gt; \n    group_by(range_id) |&gt; \n    summarize(count=n())\n##  DataFrame with 3 rows and 2 columns\n##    range_id     count\n##    &lt;factor&gt; &lt;integer&gt;\n##  1      bar         6\n##  2      boo         3\n##  3      foo         1\n\nThis is giving us the same information as the following:\n\nr |&gt; count_overlaps(g)\n##  [1] 1 6 3\n\nWhich can be added to the range data with a mutate call:\n\nr %&gt;% mutate(overlaps = count_overlaps(., g))\n##  GRanges object with 3 ranges and 2 metadata columns:\n##        seqnames            ranges strand | range_id  overlaps\n##           &lt;Rle&gt;         &lt;IRanges&gt;  &lt;Rle&gt; | &lt;factor&gt; &lt;integer&gt;\n##    [1]     chr1 34000001-34200000      + |      foo         1\n##    [2]     chr1 36000001-36200000      - |      bar         6\n##    [3]     chr1 36600001-36700000      - |      boo         3\n##    -------\n##    seqinfo: 1 sequence from an unspecified genome; no seqlengths\n\n\n\n\n\n\n\nNote\n\n\n\nUp to this point, we could have used R‚Äôs native pipe |&gt; in place of the magrittr pipe |&gt;. However the above line won‚Äôt work with R‚Äôs native pipe, even if we use the underscore placeholder _ that goes with R‚Äôs native pipe, instead of the dot placeholder .. This is because R‚Äôs native pipe doesn‚Äôt allow the placeholder to be within a nested expression (count_overlaps called before mutate). In addition, R‚Äôs native pipe only allows use of the placeholder once; sometimes it is convenient to access the incoming object more than once.\n\n\nIf we don‚Äôt care about multiple overlaps, but just want a binary variable that records if there was one or more overlaps or not, we can ask if the count of overlaps is greater than 0:\n\nr %&gt;% mutate(overlaps_any = count_overlaps(., g) &gt; 0)\n##  GRanges object with 3 ranges and 2 metadata columns:\n##        seqnames            ranges strand | range_id overlaps_any\n##           &lt;Rle&gt;         &lt;IRanges&gt;  &lt;Rle&gt; | &lt;factor&gt;    &lt;logical&gt;\n##    [1]     chr1 34000001-34200000      + |      foo         TRUE\n##    [2]     chr1 36000001-36200000      - |      bar         TRUE\n##    [3]     chr1 36600001-36700000      - |      boo         TRUE\n##    -------\n##    seqinfo: 1 sequence from an unspecified genome; no seqlengths\n\nIf we want to keep the information about the gene ranges, we swap the order of the ranges in the command:\n\ng |&gt; join_overlap_inner(r)\n##  GRanges object with 10 ranges and 2 metadata columns:\n##           seqnames            ranges strand |     gene_id range_id\n##              &lt;Rle&gt;         &lt;IRanges&gt;  &lt;Rle&gt; | &lt;character&gt; &lt;factor&gt;\n##    114784     chr1 33979609-34631443      - |      114784      foo\n##    127703     chr1 36179477-36184790      - |      127703      bar\n##     23154     chr1 36023393-36032380      + |       23154      bar\n##     27095     chr1 36602170-36621654      - |       27095      boo\n##    339488     chr1 36038971-36060927      + |      339488      bar\n##     55700     chr1 36621803-36646441      + |       55700      boo\n##      5690     chr1 36035413-36107445      - |        5690      bar\n##     63967     chr1 36197713-36235551      - |       63967      bar\n##     79932     chr1 35899091-36023551      - |       79932      bar\n##      9967     chr1 36690017-36770957      + |        9967      boo\n##    -------\n##    seqinfo: 25 sequences (1 circular) from hg19 genome\n\nIf we want strand specific overlaps, we can add _directed:\n\ng |&gt; join_overlap_inner_directed(r)\n##  GRanges object with 5 ranges and 2 metadata columns:\n##           seqnames            ranges strand |     gene_id range_id\n##              &lt;Rle&gt;         &lt;IRanges&gt;  &lt;Rle&gt; | &lt;character&gt; &lt;factor&gt;\n##    127703     chr1 36179477-36184790      - |      127703      bar\n##     27095     chr1 36602170-36621654      - |       27095      boo\n##      5690     chr1 36035413-36107445      - |        5690      bar\n##     63967     chr1 36197713-36235551      - |       63967      bar\n##     79932     chr1 35899091-36023551      - |       79932      bar\n##    -------\n##    seqinfo: 25 sequences (1 circular) from hg19 genome\n\nBy turning the join around, we have access to the genomic range information about the genes. Now we can compute, e.g.¬†the average genomic extent of the genes (first base to last base), per overlapping range.\n\ng |&gt; join_overlap_inner_directed(r) |&gt; \n    group_by(range_id) |&gt; \n    summarize(count=n(), mean_width=mean(width))\n##  DataFrame with 2 rows and 3 columns\n##    range_id     count mean_width\n##    &lt;factor&gt; &lt;integer&gt;  &lt;numeric&gt;\n##  1      bar         4    59911.8\n##  2      boo         1    19485.0\n\nWhat about \"foo\"? We need to add a complete() call to account for the fact that we are missing those overlaps after the join. We need to call the function explicitly from the tidyr package but by not loading the package we can avoid some function name conflicts with plyranges. Also we need to convert to tibble (explanation follows).\n\nlibrary(tibble)\ng |&gt; \n    join_overlap_inner_directed(r) |&gt; \n    group_by(range_id) |&gt; \n    summarize(count=n(), mean_width=mean(width)) |&gt; \n    as_tibble() |&gt; \n    tidyr::complete(range_id, fill=list(count=0))\n##  # A tibble: 3 √ó 3\n##    range_id count mean_width\n##    &lt;fct&gt;    &lt;int&gt;      &lt;dbl&gt;\n##  1 bar          4     59912.\n##  2 boo          1     19485 \n##  3 foo          0        NA\n\nWhy did we have to convert to tibble before running complete()? This is because metadata columns of GRanges objects are in a format called DataFrame, on which the tidyr / dplyr functions don‚Äôt know how to operate.\nTo access metadata columns of a GRanges object, you can use any of these paradigms:\n\nmcols(r)\n##  DataFrame with 3 rows and 1 column\n##    range_id\n##    &lt;factor&gt;\n##  1      foo\n##  2      bar\n##  3      boo\nmcols(r)$range_id\n##  [1] foo bar boo\n##  Levels: bar boo foo\nr$range_id # this works also\n##  [1] foo bar boo\n##  Levels: bar boo foo\nmcols(r)[[\"range_id\"]] # for programmatic access\n##  [1] foo bar boo\n##  Levels: bar boo foo\n\nBut if you want to work on them in with tidyr / dplyr, you need to first convert to tibble (or data.frame):\n\nmcols(r) |&gt; as_tibble()\n##  # A tibble: 3 √ó 1\n##    range_id\n##    &lt;fct&gt;   \n##  1 foo     \n##  2 bar     \n##  3 boo\n\n\n\n\n\n\n\nNote\n\n\n\nReduce instead of summarize: Above when we used group_by and summarize we lost the original range data. Another option, to preserve the range data, is to use the function reduce_ranges within groups that we define (which can be _directed or not).\n\n\nIf we want to preserve the range information for the r object, we can start with r and proceed to join, group by, and reduce within groups. For an example of reduce_ranges used in the context of a genomic data analysis see Lee, Lawrence, and Love (2020). In order to compute on the gene widths, we have to add that as a metadata column within the join. To keep the no-gene-overlapping ranges in r, we can count when the gene ID is not NA.\n\nLee, Stuart, Michael Lawrence, and Michael I Love. 2020. ‚ÄúFluent Genomics with Plyranges and Tximeta.‚Äù F1000Res. 9 (February): 109.\n\nr |&gt; \n    join_overlap_left_directed(g |&gt; \n    mutate(gene_width=width)) |&gt; \n    group_by(range_id) |&gt; \n    reduce_ranges(\n        count=sum(!is.na(gene_id)),\n        mean_width=mean(gene_width)\n    )\n##  GRanges object with 3 ranges and 3 metadata columns:\n##        seqnames            ranges strand | range_id     count mean_width\n##           &lt;Rle&gt;         &lt;IRanges&gt;  &lt;Rle&gt; | &lt;factor&gt; &lt;integer&gt;  &lt;numeric&gt;\n##    [1]     chr1 34000001-34200000      * |      foo         0         NA\n##    [2]     chr1 36000001-36200000      * |      bar         4    59911.8\n##    [3]     chr1 36600001-36700000      * |      boo         1    19485.0\n##    -------\n##    seqinfo: 1 sequence from an unspecified genome; no seqlengths\n\nHopefully, you‚Äôve seen that there are many routes to compute the types of statistics of interest. The best way to decide which one to use is to think first: what do I want the final output to look like, and do I need to keep track of non-overlapping ranges? This will help dictate the way you set up your code, whether a join or a mutate to just tally a column of overlaps, etc., and whether a complete call is needed to fill in missing levels at the end of the analysis.\n\n\n\n\n Back to top"
  },
  {
    "objectID": "pages/promoter-marks.html",
    "href": "pages/promoter-marks.html",
    "title": "\n3¬† Promoter marks\n",
    "section": "",
    "text": "Objectives\n\n\n\n\nDetermine if tissue-specific promoter marks (e.g.¬†H3K27ac) are often near genes that are expressed in a tissue-specific manner.\n\n\n\nWe will load expression data from the GTEx project (Lonsdale et al. 2013), which gives median expression in TPM for each tissue. We will use H3K27ac ChIP-seq data from the ENCODE project (Dunham et al. 2012).\n\nLonsdale, J. et al. 2013. ‚ÄúThe Genotype-Tissue Expression (GTEx) project.‚Äù Nature Genetics 45 (6): 580‚Äì85.\n\nDunham, I. et al. 2012. ‚ÄúAn integrated encyclopedia of DNA elements in the human genome.‚Äù Nature 489 (7414): 57‚Äì74.\n\nlibrary(tidyr)\nfile &lt;- \"../data-raw/GTEx_Analysis_2017-06-05_v8_RNASeQCv1.1.9_gene_median_tpm.gct.gz\"\ngtex &lt;- read.delim(file, skip=2)\n\nWe select two tissues, bladder and kidney, and convert the data from a wide format into a tidy format.\n\ntissues &lt;- gtex |&gt; \n    dplyr::select(Name, Bladder, Kidney...Cortex) |&gt;\n    dplyr::rename(gene = Name, Kidney = Kidney...Cortex) |&gt;\n    dplyr::mutate(gene = sub(\"\\\\..*\",\"\",gene)) |&gt;\n    pivot_longer(!gene, names_to=\"tissue\", values_to=\"tpm\")\n\nNow define two vectors of genes that are specific to bladder and kidney:\n\nbladder_expr &lt;- tissues |&gt;\n    dplyr::filter(tissue == \"Bladder\" & tpm &gt; 10) |&gt;\n    dplyr::pull(gene)\nkidney_expr &lt;- tissues |&gt;\n    dplyr::filter(tissue == \"Kidney\" & tpm &gt; 10) |&gt;\n    dplyr::pull(gene)\nint &lt;- intersect(bladder_expr, kidney_expr)\nbladder_expr &lt;- setdiff(bladder_expr, int)\nkidney_expr &lt;- setdiff(kidney_expr, int)\n\nNext, use an existing TxDb to locate these genes in the genomes. While we usually recommend to use GENCODE genes for human analysis, because the ENCODE chromatin modification peak files on AnnotationHub are in hg19, we use the UCSC hg19 genes here for simplicity of the code:\n\nlibrary(TxDb.Hsapiens.UCSC.hg19.knownGene)\nlibrary(org.Hs.eg.db)\n\nAdd the ENSEMBL ID and pull out the two tissue-specific sets.\n\ng &lt;- genes(TxDb.Hsapiens.UCSC.hg19.knownGene)\n##    403 genes were dropped because they have exons located on both\n##    strands of the same reference sequence or on more than one reference\n##    sequence, so cannot be represented by a single genomic range.\n##    Use 'single.strand.genes.only=FALSE' to get all the genes in a\n##    GRangesList object, or use suppressMessages() to suppress this\n##    message.\n\n\nlibrary(plyranges)\ng &lt;- g |&gt; \n    mutate(ensembl = mapIds(org.Hs.eg.db, gene_id, \"ENSEMBL\", \"ENTREZID\"))\nbladder_g &lt;- g |&gt; filter(ensembl %in% bladder_expr)\nkidney_g &lt;- g |&gt; filter(ensembl %in% kidney_expr)\n\nFinally we combine the two sets with bind_ranges, and we change the feature size from the whole gene extent (the range from the leftmost exon to rightmost exon), to just the TSS, using anchor_5p and mutate.\n\ntss &lt;- bind_ranges(\n    bladder=bladder_g,\n    kidney=kidney_g,\n    .id=\"gtissue\"\n) |&gt;\n    anchor_5p() |&gt;\n    mutate(width=1)\n\nNow we will obtain the H3K27ac peak sets:\n\nlibrary(AnnotationHub)\n##  Loading required package: BiocFileCache\n##  Loading required package: dbplyr\n##  \n##  Attaching package: 'AnnotationHub'\n##  The following object is masked from 'package:Biobase':\n##  \n##      cache\nah &lt;- AnnotationHub()\n# query(ah, c(\"Homo sapiens\", \"bladder\", \"H3K27ac\", \"narrowPeak\"))\nbladder_pks &lt;- ah[[\"AH44180\"]]\n##  downloading 1 resources\n##  retrieving 1 resource\n##  loading from cache\n##  require(\"rtracklayer\")\n# query(ah, c(\"Homo sapiens\", \"kidney\", \"H3K27ac\", \"narrowPeak\"))\nkidney_pks &lt;- ah[[\"AH43443\"]]\n##  downloading 1 resources\n##  retrieving 1 resource\n##  loading from cache\n\nWe download these and scale so they have the same 90% quantile of signalValue.\n\nninety &lt;- function(x) quantile(x, .9, names=FALSE)\nbladder_pks &lt;- bladder_pks |&gt;\n    mutate(signal = signalValue / ninety(signalValue))\nkidney_pks &lt;- kidney_pks |&gt;\n    mutate(signal = signalValue / ninety(signalValue))\n\nCombine the peaks from bladder and kidney, filter to those with &lt; 0.1% FDR, and center the peak on the summit (the peak column gives the shift from the left side to the summit).\n\npks &lt;- bind_ranges(\n    bladder=bladder_pks,\n    kidney=kidney_pks,\n    .id=\"ptissue\"\n) |&gt;\n    filter(qValue &gt; 3, width &lt;= 1000) |&gt;\n    mutate(start = start + peak) |&gt;\n    dplyr::select(-peak) |&gt;\n    mutate(width = 1)\n\nFinally, once we have two tidy range sets, we can perform the analysis by a join, followed by two lines that take care of multiple overlaps, followed by two lines that give us our tallies of interest.\nIt appears that tissue-specific peaks are enriched near the tissue-specific genes for both bladder and kidney.\n\ntss |&gt;\n    join_overlap_left(pks, maxgap=500) |&gt;\n    group_by(ptissue) |&gt; # within peak tissue...\n    filter(!duplicated(gene_id)) |&gt; # ...just take the first overlap per gene\n    group_by(gtissue, ptissue) |&gt;\n    summarize(count = n())\n##  DataFrame with 6 rows and 3 columns\n##    gtissue     ptissue     count\n##      &lt;Rle&gt; &lt;character&gt; &lt;integer&gt;\n##  1 bladder     bladder      2163\n##  2 bladder      kidney      1568\n##  3 bladder          NA       859\n##  4  kidney     bladder       103\n##  5  kidney      kidney       208\n##  6  kidney          NA       242\n\nThe above number could also be found with four countOverlaps calls, by considering all four pairs of overlaps of the two sets of genes and peaks.\nAnother way to avoid counting overlaps more than once per gene is to use the plyranges function, n_distinct():\n\ntss |&gt;\n    join_overlap_left(pks, maxgap=500) |&gt;\n    group_by(gtissue, ptissue) |&gt;\n    summarize(count = n_distinct(gene_id))\n##  DataFrame with 6 rows and 3 columns\n##    gtissue     ptissue     count\n##      &lt;Rle&gt; &lt;character&gt; &lt;integer&gt;\n##  1 bladder     bladder      2163\n##  2 bladder      kidney      1568\n##  3 bladder          NA       859\n##  4  kidney     bladder       103\n##  5  kidney      kidney       208\n##  6  kidney          NA       242\n\nIf we want more information per gene, e.g.¬†suppose we want to compute the average signal per gene of peaks nearby, we need to group twice, once also by gene ID, and the second time integrating over gene ID. While here we add a few more lines of code, performing such an operation with base Bioconductor functions would require adding code to perform the loops, adding many intermediate variables to store results, etc.\n\ntss |&gt;\n    join_overlap_left(pks, maxgap=500) |&gt;\n    group_by(gtissue, ptissue, gene_id) |&gt; # need per gene stats\n    summarize(num_overlaps = n(), signal = mean(signal)) |&gt;\n    as_tibble() |&gt; # DataFrame to tibble for further processing\n    group_by(gtissue, ptissue) |&gt;\n    summarize(\n        sum_any_overlaps = sum(num_overlaps &gt; 0),\n        mean_signal=mean(signal)\n    )\n##  `summarise()` has grouped output by 'gtissue'. You can override using the\n##  `.groups` argument.\n##  # A tibble: 6 √ó 4\n##  # Groups:   gtissue [2]\n##    gtissue ptissue sum_any_overlaps mean_signal\n##    &lt;chr&gt;   &lt;chr&gt;              &lt;int&gt;       &lt;dbl&gt;\n##  1 bladder bladder             2163       1.18 \n##  2 bladder kidney              1568       0.929\n##  3 bladder &lt;NA&gt;                 859      NA    \n##  4 kidney  bladder              103       0.991\n##  5 kidney  kidney               208       0.714\n##  6 kidney  &lt;NA&gt;                 242      NA\n\nQuestion:\nWhat‚Äôs wrong with this analysis?\n\nWe didn‚Äôt figure out the expressed promoter, we just looked at the left or rightmost isoform (for + or - strand genes, respectively).\n\n\n\n\n\n Back to top"
  }
]